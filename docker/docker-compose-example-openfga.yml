name: opal-openfga-example

services:
  # When scaling the opal-server to multiple nodes and/or multiple workers, we use
  # a *broadcast* channel to sync between all the instances of opal-server.
  # Under the hood, this channel is implemented by encode/broadcaster.
  # At the moment, the broadcast channel can be either: postgresdb, redis or kafka.
  broadcast_channel:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - opal-network

  # OPAL server configuration
  # Handles policy updates and coordinates with the broadcast channel
  opal_server:
    image: permitio/opal-server:latest
    environment:
      # the broadcast backbone uri used by opal server workers
      - OPAL_BROADCAST_URI=postgres://postgres:postgres@broadcast_channel:5432/postgres
      # number of uvicorn workers to run inside the opal-server container
      - UVICORN_NUM_WORKERS=4
      # the git repo hosting our OpenFGA policy
      - OPAL_POLICY_REPO_URL=https://github.com/daveads/opal-example-policy-openfga
      # polling interval of 30 seconds to check for policy updates
      - OPAL_POLICY_REPO_POLLING_INTERVAL=30
      # configures initial data sources for the opal client
      - OPAL_DATA_CONFIG_SOURCES={"config":{"entries":[{"url":"http://opal_server:7002/policy-data","topics":["policy_data"],"dst_path":"/static"}]}}
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
    ports:
      # exposes opal server on the host machine at: http://localhost:7002
      - "7002:7002"
    depends_on:
      - broadcast_channel
    networks:
      - opal-network

  # OPAL client configured specifically for OpenFGA integration
  opal_client_openfga:
    image: permitio/opal-client-openfga:latest
    environment:
      - OPAL_SERVER_URL=http://opal_server:7002
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
      # Configure OpenFGA as the policy engine
      - OPAL_POLICY_STORE_TYPE=OPENFGA
      - OPAL_POLICY_STORE_URL=http://0.0.0.0:8080
      - OPAL_OPENFGA_STORE_ID=01JAT34GM6T5WRVMXXDYWGSYKN
      # Enable inline OpenFGA mode
      - OPAL_INLINE_OPENFGA_ENABLED=true
      #- OPAL_LOG_LEVEL=DEBUG

    ports:
      # exposes opal client API at: http://localhost:7766
      - "7766:7000"
      # exposes OpenFGA API at: http://localhost:8080
      - "8080:8080"
      # Additional port exposure
      - "3000:3000"
    networks:
      - opal-network
    depends_on:
      - opal_server
    # Ensures opal-server is ready before starting the client
    command: sh -c "exec ./wait-for.sh opal_server:7002 --timeout=20 -- ./start.sh"
    volumes:
      - openfga_backup:/opal/backup:rw

# Network configuration for service communication
networks:
  opal-network:
    driver: bridge

# Volume for persisting OpenFGA data
volumes:
  openfga_backup:
