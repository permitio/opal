name: Build and publish to Docker Hub
on:
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # this job will build and push the docker images to docker hub
  # - it will only run after a new "release" is create on github
  # - it will auto tag the image according to the github release tag
  docker_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build client
        id: build_client
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          push: false
          target: client
          cache-from: type=registry,ref=authorizon/opal-client:latest
          cache-to: type=inline
          load: true
          tags: |
            authorizon/opal-client:test
            authorizon/opal-client:latest
            authorizon/opal-client:${{ github.event.release.tag_name }}

      - name: Build client-standalone
        id: build_client_standalone
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          push: false
          target: client-standalone
          cache-from: type=registry,ref=authorizon/opal-client-standalone:latest
          cache-to: type=inline
          load: true
          tags: |
            authorizon/opal-client-standalone:test
            authorizon/opal-client-standalone:latest
            authorizon/opal-client-standalone:${{ github.event.release.tag_name }}

      - name: Build server
        id: build_server
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          push: false
          target: server
          cache-from: type=registry,ref=authorizon/opal-server:latest
          cache-to: type=inline
          load: true
          tags: |
            authorizon/opal-server:test
            authorizon/opal-server:latest
            authorizon/opal-server:${{ github.event.release.tag_name }}

      - name: Create modified docker compose file
        run: sed 's/:latest/:test/g' docker/docker-compose-example.yml > docker/docker-compose-test.yml

      - name: Bring up stack
        run: docker-compose -f docker/docker-compose-test.yml up -d

      - name: Check if OPA is healthy
        run: ./scripts/wait-for.sh -t 60 http://localhost:8181/v1/data/users -- sleep 10 && curl -s "http://localhost:8181/v1/data/users" | jq '.result.bob.location.country == "US"'

      - name: Output container logs
        run: docker-compose -f docker/docker-compose-test.yml logs

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push client
        id: push_client
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          push: true
          target: client
          cache-from: type=registry,ref=authorizon/opal-client:latest
          cache-to: type=inline
          tags: |
            authorizon/opal-client:latest
            authorizon/opal-client:${{ github.event.release.tag_name }}

      - name: Push client-standalone
        id: push_client_standalone
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          push: true
          target: client-standalone
          cache-from: type=registry,ref=authorizon/opal-client-standalone:latest
          cache-to: type=inline
          tags: |
            authorizon/opal-client-standalone:latest
            authorizon/opal-client-standalone:${{ github.event.release.tag_name }}

      - name: Push server
        id: push_server
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          push: true
          target: server
          cache-from: type=registry,ref=authorizon/opal-server:latest
          cache-to: type=inline
          tags: |
            authorizon/opal-server:latest
            authorizon/opal-server:${{ github.event.release.tag_name }}
